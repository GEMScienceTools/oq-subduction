#!/usr/bin/env python

import sys
import h5py
import logging
import numpy as np

from mayavi import mlab
from openquake.baselib import sap


def plot_rupture(rup, vsc):
    """
    """
    llo = np.squeeze(rup['lons'])
    lla = np.squeeze(rup['lats'])
    lde = np.squeeze(rup['deps'])
    mlab.plot3d(llo, lla, lde*vsc, color=(0, 0, 1))


def plot(hdf5_fname, vsc):
    """
    :param hdf5_fname:
    """
    #
    # Set vertical scaling
    if vsc is None:
        vsc = -0.01
    else:
        vsc = float(vsc)

    f = h5py.File(hdf5_fname, 'r')
    #
    # Prepare the figure in mayavi
    f = mlab.figure(bgcolor=(1, 1, 1), size=(900, 600))
    #
    # Process each magnitude value included in the hdf5 file
    for mag in f['ruptures'].keys():
        grp = f['ruptures'][mag]
        if len(grp) < 1:
            tmps = 'Skipping ruptures for magnitude {:.2f}'.format(float(mag))
            logging.warning(tmps)
            continue
        for key in grp.keys():
            plot_rupture(grp[key][:])
    f.close()


def main(argv):
    """
    For help type: ./plt_ruptures_mayavi
    """
    p = sap.Script(plot)
    p.arg(name='hdf5_fname', help='.hdf5 filename containing the ruptures')
    p.opt(name='vsc', help='Vertical scaling e.g. -0.01')

    if len(argv) < 1:
        print(p.help())
    else:
        p.callfunc()


if __name__ == '__main__':
    main(sys.argv[1:])
